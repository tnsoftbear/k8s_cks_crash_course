apiVersion: v1
kind: Namespace
metadata:
  name: k97
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sa-api-po
  namespace: k97
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sa-api-cm
  namespace: k97
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: operations-clusterrole-po
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: operations-clusterrole-cm
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: serviceaccount-operations-clusterrolebinding-po
subjects:
- kind: ServiceAccount
  name: sa-api-po
  namespace: k97
roleRef:
  kind: ClusterRole
  name: operations-clusterrole-po
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: serviceaccount-operations-clusterrolebinding-cm
subjects:
- kind: ServiceAccount
  name: sa-api-cm
  namespace: k97
roleRef:
  kind: ClusterRole
  name: operations-clusterrole-cm
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Pod
metadata:
  name: pod-list
  namespace: k97
spec:
  serviceAccountName: sa-api-po
  containers:
  - name: pods-operation
    image: alpine/curl:3.14
    command: ['sh', '-c', 'while true; do if curl -s -o /dev/null -k -m 5 -H "Authorization: Bearer $(cat /var/run/secrets/kubernetes.io/serviceaccount/token)" https://kubernetes.default.svc.cluster.local/api/v1/namespaces/k75/pods; then echo "[SUCCESS] Listing Pods..."; else echo "[ERROR] Listing Pods..."; fi; sleep 10; done']
---
apiVersion: v1
kind: Pod
metadata:
  name: configmap-list
  namespace: k97
spec:
  serviceAccountName: sa-api-cm
  containers:
  - name: configmaps-operation
    image: alpine/curl:3.14
    command: ['sh', '-c', 'while true; do if curl -s -o /dev/null -k -m 5 -H "Authorization: Bearer $(cat /var/run/secrets/kubernetes.io/serviceaccount/token)" https://kubernetes.default.svc.cluster.local/api/v1/namespaces/k75/configmaps; then echo "[SUCCESS] Listing ConfigMaps..."; else echo "[ERROR] Listing ConfigMaps..."; fi; sleep 10; done']
